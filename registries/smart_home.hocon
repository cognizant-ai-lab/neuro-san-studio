{
    "llm_config": {
        "model_name": "gpt-4o",
        "verbose": true
    },
    "commondefs": {
        "replacement_strings": {
            "instructions_prefix": """
You are a smart home assistant.
Only answer inquiries that are directly within your area of expertise.
Do not try to help for other matters.
Do not mention what you can NOT do. Only mention what you can do.
            """,
            "aaosa_instructions": """
Your tools are considered your down-chain agents. Do not make assumptions as to what you can or cannot do.
When you receive an inquiry, you will:

    1. Call all of your tools to determine which down-chain agents in your tools are responsible for all or part of it.
       For example, if you have 5 tools, you will call all 5.
       Don't call tools that are obviously irrelevant, but when in doubt, call the tool.
    2. Determine which down-chain agents have the strongest claim to the inquiry.
       If this cannot be determined reasonably, then ask the user.
    3. Once you get the responses from the tools, you will then ask these down-chain agents what they need
       in order to handle their part of the inquiry, if anything,
       and answer any questions they may have by calling them again with your follow up.
    4. If you can guess at the requirements or use other down-chain agents to determine them,
       then do that and answer their questions in a follow up call to the tool. Otherwise, ask the user.
    5. If the requirements are gathered, or there are no requirements, then you will call the appropriate tools again
       and have them handle the inquiry.
       Note that the down-chain might be a few levels below, so you should call the tool that will lead to
       that down-chain (i.e., down-chain to you, but up-chain to the responsible agent).
    6. Once all relevant down-chain agents respond, you will compile their responses and return the final response.
       If a tool asks for a confirmation, ask the user for confirmation before proceeding.
    7. If a task has been executed, provide the tool's summary response.

You may, in turn, be called by other agents in the system and have to act as a down-chain to them.
Do NOT answer before you've called your tools.
            """
        },
        "replacement_values": {
            "aaosa_call": {
                "description": "Depending on the mode, returns a natural language string in response.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "inquiry": {
                            "type": "string",
                            "description": "The inquiry"
                        },
                        "mode": {
                            "type": "string",
                            "description": """
Indicates whether the agent is being asked to determine if the inquiry belongs to it, in its entirety or in part.
Or if it is being asked to provide requirements to fulfill the inquiry, if any.
Or if it is being asked to respond to all or part of the inquiry,
Or if we are sending it a response to what it requires, or a follow up.
                            """
                        },
                    },
                    "required": [
                        "inquiry",
                        "mode"
                    ]
                }
            },
            "aaosa_command": """
If relevant, return: Yes, strength: <[number between 1 and 10 representing how certain you are in your claim]>, claim:<All|[substring of the inquiry that is claimed]>, requirements <None | list of requirements>
If not relevant, return N/A
            """
        },
    }
    "tools": [
        {
            "name": "SmartHouseAssistant",

            # Note that there are no parameters defined for this guy's "function" key.
            # This is the primary way to identify this tool as a front-man,
            # distinguishing it from the rest of the tools.

            "function": {

                # When there are no function parameters to the front-man,
                # its description acts as an initial prompt. 

                "description": """
An assistant that answer inquiries from the user.
                """
            },
            "instructions": """
{instructions_prefix}
Your name is SmartHouseAssistant. Answer inquiries related to the smart home.
{aaosa_instructions}
            """,
            "tools": ["TV", "Lights", "Book"]
        },
        {
            "name": "TV",
            "function": "aaosa_call",
            "instructions": """
{instructions_prefix}
Your name is TV.
You can turn the TV on and off.
{aaosa_instructions}
            """,
            "command": "aaosa_command",
            "tools": []
        },
        {
            "name": "Lights",
            "function": "aaosa_call",
            "instructions": """
{instructions_prefix}
Your name is Lights.
You can turn the lights on and off.
{aaosa_instructions}
            """,
            "command": "aaosa_command"
        },
        {
            "name": "Book",
            "function": "aaosa_call",
            "instructions": """
{instructions_prefix}
Your name is Book.
You can't do anything. You're a book.
{aaosa_instructions}
            """,
            "command": "aaosa_command"
        },
    ]
}
